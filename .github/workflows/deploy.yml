name: SchoolMATE Backend CI/CD to Google Cloud Run (Free Tier)

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  AR_REPO_NAME: ${{ secrets.AR_REPO_NAME }}
  SERVICE_NAME: schoolmate
  REGION: ${{ secrets.GCP_REGION }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout Code
        uses: actions/checkout@v3

      # 2. GCP 인증
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # 3. Docker Buildx 설정
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 4. Artifact Registry 로그인
      - name: Configure Docker to use Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      # 5. Docker 이미지 빌드 및 푸시
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.AR_REPO_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }}

      # 6. Cloud Run 무료 티어 설정으로 배포
      - name: Deploy to Cloud Run (Free Tier)
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE_NAME }}
          region: ${{ env.REGION }}
          image: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.AR_REPO_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
          env_vars: |
            SPRING_PROFILES_ACTIVE=prod
          # 트래픽 없을 때 완전 종료 (요금 0)
          # 동시에 하나만 실행 (무료 티어 초과 방지)
          # 최소 CPU (무료 티어 유지)
          # 가벼운 서버 기준 (무료 티어 내)
          # 인증 없이 접근 허용 (API 공개용)
          # 하나의 인스턴스당 요청 80개까지 처리 (효율 ↑)
          # 모든 트래픽 허용 (기본 설정)
          flags: >
            --port=9000
            --min-instances=0
            --max-instances=1
            --cpu=0.25
            --memory=512Mi
            --allow-unauthenticated
            --concurrency=80
            --ingress=all